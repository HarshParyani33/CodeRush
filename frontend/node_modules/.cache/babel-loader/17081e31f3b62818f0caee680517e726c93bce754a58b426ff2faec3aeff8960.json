{"ast":null,"code":"var _jsxFileName = \"H:\\\\Coding\\\\Code Rush\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\nimport axios from '../config/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const fetchUserData = useCallback(async () => {\n    try {\n      const res = await axios.get('/api/auth/me');\n      setUser(res.data);\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      logout();\n    }\n  }, []);\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setIsAuthenticated(true);\n      fetchUserData();\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      setIsAuthenticated(false);\n    }\n  }, [token, fetchUserData]);\n  const login = async (email, password) => {\n    try {\n      const res = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      setToken(token);\n      setUser(user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed'\n      };\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const res = await axios.post('/api/auth/register', {\n        username,\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      setToken(token);\n      setUser(user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      isAuthenticated,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"qlsO9RXM40vL3fmFLzJxvBk9+44=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useCallback","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","isAuthenticated","setIsAuthenticated","fetchUserData","res","get","data","error","console","logout","defaults","headers","common","login","email","password","post","setItem","success","_error$response","_error$response$data","response","register","username","_error$response2","_error$response2$data","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["H:/Coding/Code Rush/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\r\nimport axios from '../config/axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const fetchUserData = useCallback(async () => {\r\n    try {\r\n      const res = await axios.get('/api/auth/me');\r\n      setUser(res.data);\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n      logout();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setIsAuthenticated(true);\r\n      fetchUserData();\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n      setIsAuthenticated(false);\r\n    }\r\n  }, [token, fetchUserData]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await axios.post('/api/auth/login', { email, password });\r\n      const { token, user } = res.data;\r\n      localStorage.setItem('token', token);\r\n      setToken(token);\r\n      setUser(user);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: error.response?.data?.error || 'Login failed' };\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      const res = await axios.post('/api/auth/register', { username, email, password });\r\n      const { token, user } = res.data;\r\n      localStorage.setItem('token', token);\r\n      setToken(token);\r\n      setUser(user);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: error.response?.data?.error || 'Registration failed' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        token,\r\n        isAuthenticated,\r\n        login,\r\n        register,\r\n        logout\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}