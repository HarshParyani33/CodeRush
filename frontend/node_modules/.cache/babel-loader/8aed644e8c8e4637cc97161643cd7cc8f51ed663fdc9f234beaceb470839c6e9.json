{"ast":null,"code":"var _jsxFileName = \"H:\\\\Coding\\\\Project\\\\mp coder\\\\frontend\\\\src\\\\components\\\\ui\\\\sparkles.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useCallback } from \"react\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SparklesCore = ({\n  particleColor = \"#FFFFFF\",\n  backgroundColor = \"transparent\",\n  minSize = 0.4,\n  maxSize = 1,\n  particleDensity = 100,\n  className = \"\",\n  speed = 1,\n  id = \"tsparticles\"\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [context, setContext] = useState(null);\n  const [particles, setParticles] = useState([]);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  useEffect(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      setContext(ctx);\n      setWidth(canvas.width);\n      setHeight(canvas.height);\n    }\n  }, []);\n  const initParticles = useCallback(() => {\n    const newParticles = [];\n    for (let i = 0; i < particleDensity; i++) {\n      newParticles.push({\n        x: Math.random() * width,\n        y: Math.random() * height,\n        size: Math.random() * (maxSize - minSize) + minSize,\n        speedX: (Math.random() - 0.5) * speed,\n        speedY: (Math.random() - 0.5) * speed\n      });\n    }\n    setParticles(newParticles);\n  }, [width, height, particleDensity, minSize, maxSize, speed]);\n  useEffect(() => {\n    if (context && width && height) {\n      initParticles();\n    }\n  }, [context, width, height, initParticles]);\n  useEffect(() => {\n    if (!context || !width || !height) return;\n    let animationFrameId;\n    const animate = () => {\n      context.clearRect(0, 0, width, height);\n      context.fillStyle = backgroundColor;\n      context.fillRect(0, 0, width, height);\n      particles.forEach(particle => {\n        particle.x += particle.speedX;\n        particle.y += particle.speedY;\n        if (particle.x < 0 || particle.x > width) particle.speedX *= -1;\n        if (particle.y < 0 || particle.y > height) particle.speedY *= -1;\n        context.beginPath();\n        context.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n        context.fillStyle = particleColor;\n        context.fill();\n      });\n      animationFrameId = requestAnimationFrame(animate);\n    };\n    animate();\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [context, width, height, particles, backgroundColor, particleColor]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: className,\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(SparklesCore, \"rvnyaJV2W/uwctWUTyGWKTZe/k4=\");\n_c = SparklesCore;\nvar _c;\n$RefreshReg$(_c, \"SparklesCore\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useRef","jsxDEV","_jsxDEV","SparklesCore","particleColor","backgroundColor","minSize","maxSize","particleDensity","className","speed","id","_s","canvasRef","context","setContext","particles","setParticles","width","setWidth","height","setHeight","current","canvas","ctx","getContext","initParticles","newParticles","i","push","x","Math","random","y","size","speedX","speedY","animationFrameId","animate","clearRect","fillStyle","fillRect","forEach","particle","beginPath","arc","PI","fill","requestAnimationFrame","cancelAnimationFrame","ref","style","position","top","left","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["H:/Coding/Project/mp coder/frontend/src/components/ui/sparkles.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useCallback } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nexport const SparklesCore = ({\r\n  particleColor = \"#FFFFFF\",\r\n  backgroundColor = \"transparent\",\r\n  minSize = 0.4,\r\n  maxSize = 1,\r\n  particleDensity = 100,\r\n  className = \"\",\r\n  speed = 1,\r\n  id = \"tsparticles\",\r\n}) => {\r\n  const canvasRef = useRef(null);\r\n  const [context, setContext] = useState(null);\r\n  const [particles, setParticles] = useState([]);\r\n  const [width, setWidth] = useState(0);\r\n  const [height, setHeight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (canvasRef.current) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      setContext(ctx);\r\n      setWidth(canvas.width);\r\n      setHeight(canvas.height);\r\n    }\r\n  }, []);\r\n\r\n  const initParticles = useCallback(() => {\r\n    const newParticles = [];\r\n    for (let i = 0; i < particleDensity; i++) {\r\n      newParticles.push({\r\n        x: Math.random() * width,\r\n        y: Math.random() * height,\r\n        size: Math.random() * (maxSize - minSize) + minSize,\r\n        speedX: (Math.random() - 0.5) * speed,\r\n        speedY: (Math.random() - 0.5) * speed,\r\n      });\r\n    }\r\n    setParticles(newParticles);\r\n  }, [width, height, particleDensity, minSize, maxSize, speed]);\r\n\r\n  useEffect(() => {\r\n    if (context && width && height) {\r\n      initParticles();\r\n    }\r\n  }, [context, width, height, initParticles]);\r\n\r\n  useEffect(() => {\r\n    if (!context || !width || !height) return;\r\n\r\n    let animationFrameId;\r\n    const animate = () => {\r\n      context.clearRect(0, 0, width, height);\r\n      context.fillStyle = backgroundColor;\r\n      context.fillRect(0, 0, width, height);\r\n\r\n      particles.forEach((particle) => {\r\n        particle.x += particle.speedX;\r\n        particle.y += particle.speedY;\r\n\r\n        if (particle.x < 0 || particle.x > width) particle.speedX *= -1;\r\n        if (particle.y < 0 || particle.y > height) particle.speedY *= -1;\r\n\r\n        context.beginPath();\r\n        context.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\r\n        context.fillStyle = particleColor;\r\n        context.fill();\r\n      });\r\n\r\n      animationFrameId = requestAnimationFrame(animate);\r\n    };\r\n\r\n    animate();\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [context, width, height, particles, backgroundColor, particleColor]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      className={className}\r\n      style={{ position: \"absolute\", top: 0, left: 0 }}\r\n    />\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}