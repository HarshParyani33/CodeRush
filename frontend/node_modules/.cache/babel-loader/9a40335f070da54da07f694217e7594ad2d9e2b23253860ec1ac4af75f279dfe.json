{"ast":null,"code":"var _jsxFileName = \"H:\\\\Coding\\\\Project\\\\mp coder\\\\frontend\\\\src\\\\components\\\\ui\\\\sparkles.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SparklesCore = ({\n  id,\n  background,\n  minSize,\n  maxSize,\n  particleDensity,\n  className,\n  particleColor,\n  speed\n}) => {\n  _s();\n  useEffect(() => {\n    const canvas = document.getElementById(id);\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    let particles = [];\n    const PARTICLE_COUNT = particleDensity || 100;\n    class Particle {\n      constructor() {\n        this.x = Math.random() * canvas.width;\n        this.y = Math.random() * canvas.height;\n        this.size = Math.random() * (maxSize - minSize) + minSize;\n        this.speedX = (Math.random() - 0.5) * speed;\n        this.speedY = (Math.random() - 0.5) * speed;\n        this.opacity = Math.random();\n        this.growing = true;\n      }\n      update() {\n        this.x += this.speedX;\n        this.y += this.speedY;\n        if (this.growing) {\n          this.opacity += 0.01;\n          if (this.opacity >= 1) this.growing = false;\n        } else {\n          this.opacity -= 0.01;\n          if (this.opacity <= 0) this.growing = true;\n        }\n\n        // Wrap around screen\n        if (this.x < 0) this.x = canvas.width;\n        if (this.x > canvas.width) this.x = 0;\n        if (this.y < 0) this.y = canvas.height;\n        if (this.y > canvas.height) this.y = 0;\n      }\n      draw() {\n        ctx.fillStyle = `rgba(${particleColor}, ${this.opacity})`;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        ctx.fill();\n      }\n    }\n    const init = () => {\n      particles = [];\n      for (let i = 0; i < PARTICLE_COUNT; i++) {\n        particles.push(new Particle());\n      }\n    };\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n      requestAnimationFrame(animate);\n    };\n    init();\n    animate();\n    const handleResize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      init();\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [id, background, minSize, maxSize, particleDensity, particleColor, speed]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: id,\n    className: className,\n    style: {\n      background: background || 'transparent',\n      position: 'absolute',\n      inset: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(SparklesCore, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SparklesCore;\nvar _c;\n$RefreshReg$(_c, \"SparklesCore\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SparklesCore","id","background","minSize","maxSize","particleDensity","className","particleColor","speed","_s","canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","particles","PARTICLE_COUNT","Particle","constructor","x","Math","random","y","size","speedX","speedY","opacity","growing","update","draw","fillStyle","beginPath","arc","PI","fill","init","i","push","animate","clearRect","forEach","particle","requestAnimationFrame","handleResize","addEventListener","removeEventListener","style","position","inset","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["H:/Coding/Project/mp coder/frontend/src/components/ui/sparkles.js"],"sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport const SparklesCore = ({\r\n  id,\r\n  background,\r\n  minSize,\r\n  maxSize,\r\n  particleDensity,\r\n  className,\r\n  particleColor,\r\n  speed,\r\n}) => {\r\n  useEffect(() => {\r\n    const canvas = document.getElementById(id);\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n\r\n    let particles = [];\r\n    const PARTICLE_COUNT = particleDensity || 100;\r\n\r\n    class Particle {\r\n      constructor() {\r\n        this.x = Math.random() * canvas.width;\r\n        this.y = Math.random() * canvas.height;\r\n        this.size = Math.random() * (maxSize - minSize) + minSize;\r\n        this.speedX = (Math.random() - 0.5) * speed;\r\n        this.speedY = (Math.random() - 0.5) * speed;\r\n        this.opacity = Math.random();\r\n        this.growing = true;\r\n      }\r\n\r\n      update() {\r\n        this.x += this.speedX;\r\n        this.y += this.speedY;\r\n\r\n        if (this.growing) {\r\n          this.opacity += 0.01;\r\n          if (this.opacity >= 1) this.growing = false;\r\n        } else {\r\n          this.opacity -= 0.01;\r\n          if (this.opacity <= 0) this.growing = true;\r\n        }\r\n\r\n        // Wrap around screen\r\n        if (this.x < 0) this.x = canvas.width;\r\n        if (this.x > canvas.width) this.x = 0;\r\n        if (this.y < 0) this.y = canvas.height;\r\n        if (this.y > canvas.height) this.y = 0;\r\n      }\r\n\r\n      draw() {\r\n        ctx.fillStyle = `rgba(${particleColor}, ${this.opacity})`;\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n        ctx.fill();\r\n      }\r\n    }\r\n\r\n    const init = () => {\r\n      particles = [];\r\n      for (let i = 0; i < PARTICLE_COUNT; i++) {\r\n        particles.push(new Particle());\r\n      }\r\n    };\r\n\r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      particles.forEach((particle) => {\r\n        particle.update();\r\n        particle.draw();\r\n      });\r\n      requestAnimationFrame(animate);\r\n    };\r\n\r\n    init();\r\n    animate();\r\n\r\n    const handleResize = () => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n      init();\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, [id, background, minSize, maxSize, particleDensity, particleColor, speed]);\r\n\r\n  return (\r\n    <canvas\r\n      id={id}\r\n      className={className}\r\n      style={{\r\n        background: background || 'transparent',\r\n        position: 'absolute',\r\n        inset: 0,\r\n      }}\r\n    />\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}